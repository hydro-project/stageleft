name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          cancel_others: "true"

  check:
    name: Lint and Check
    if: ${{ needs.pre_job.outputs.should_skip != 'true' || github.event_name != 'pull_request' }}
    timeout-minutes: 20
    needs: pre_job
    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always
      CARGO_INCREMENTAL: 0
      CARGO_PROFILE_DEV_STRIP: "debuginfo"
      CARGO_PROFILE_TEST_STRIP: "debuginfo"
      CARGO_PROFILE_RELEASE_STRIP: "debuginfo"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Set Rust caching env vars
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('SCCACHE_GHA_ENABLED', 'true');
            core.exportVariable('RUSTC_WRAPPER', 'sccache');

      - name: Run cargo fmt
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run cargo check
        run: cargo check --all-targets

  test:
    name: Test Suite
    if: ${{ needs.pre_job.outputs.should_skip != 'true' || github.event_name != 'pull_request' }}
    timeout-minutes: 50
    needs: pre_job
    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always
      CARGO_INCREMENTAL: 0
      CARGO_PROFILE_DEV_STRIP: "debuginfo"
      CARGO_PROFILE_TEST_STRIP: "debuginfo"
      CARGO_PROFILE_RELEASE_STRIP: "debuginfo"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Set Rust caching env vars
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('SCCACHE_GHA_ENABLED', 'true');
            core.exportVariable('RUSTC_WRAPPER', 'sccache');

      - name: Install cargo-nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Run cargo nextest on all targets
        run: cargo nextest run --no-fail-fast --all-targets

      - name: Run doctests
        run: cargo test --no-fail-fast --doc
